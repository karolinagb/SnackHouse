@model ReflectionIT.Mvc.Paging.PagingList<SnackHouse.Models.Snack>

@{
    ViewData["Title"] = "Index";
}

<h1>Lanches</h1>

<form method="get" class="form-inline">
    <input name="filter" class="form-control" placeholder="filtro" value="@Model.RouteValue["Filter"]" />
    <button type="submit" class="btn btn-info">
        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
        Procurar
    </button>
</form>

Total de lanches : @Model.TotalRecordCount
<div>
    @* Visual component para exibir o paginador*@
    <vc:pager paging-list="@Model"></vc:pager>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Name)*@
                @Html.SortableHeaderFor(model => model.Name, "Name")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SmallDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LongDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImgUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImgThumbnailUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPreferSnack)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SmallDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LongDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImgUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImgThumbnailUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsPreferSnack)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Id)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @* Visual component para exibir o paginador*@
    <vc:pager paging-list="@Model"></vc:pager>
</div>
